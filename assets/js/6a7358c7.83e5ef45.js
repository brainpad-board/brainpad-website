"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[608],{5989:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"resources/makecode-arcade","title":"MakeCode Arcade","description":"Microsoft MakeCode Arcade goes hand in hand with BrainPad Arcade to create an exciting coding learning platform for building games. Not only that, it goes beyond games to build smart electronic systems with its connectivity options.","source":"@site/docs/resources/makecode-arcade.mdx","sourceDirName":"resources","slug":"/resources/makecode-arcade","permalink":"/docs/resources/makecode-arcade","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"pagination_next":null,"pagination_prev":null},"sidebar":"tutorialSidebar"}');var r=s(4848),o=s(8453);s(4911),s(9329);const t={pagination_next:null,pagination_prev:null},a="MakeCode Arcade",l={},d=[{value:"Plug it in",id:"plug-it-in",level:2},{value:"Build the Program",id:"build-the-program",level:2},{value:"Prep the Device",id:"prep-the-device",level:2},{value:"Lessons",id:"lessons",level:2},{value:"2D Adventure",id:"2d-adventure",level:3},{value:"Space Shooter",id:"space-shooter",level:3},{value:"Edge Pads",id:"edge-pads",level:3},{value:"Analog vs Digital",id:"analog-vs-digital",level:3},{value:"LED Ring",id:"led-ring",level:3},{value:"Motion Sensing",id:"motion-sensing",level:3},{value:"Light Sensing",id:"light-sensing",level:3},{value:"Sounds Sensing",id:"sounds-sensing",level:3}];function c(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",p:"p",...(0,o.R)(),...e.components},{Button:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Button",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"makecode-arcade",children:"MakeCode Arcade"})}),"\n",(0,r.jsx)(n.p,{children:"Microsoft MakeCode Arcade goes hand in hand with BrainPad Arcade to create an exciting coding learning platform for building games. Not only that, it goes beyond games to build smart electronic systems with its connectivity options."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/block-coding.jpg",alt:"Block Coding"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"plug-it-in",children:"Plug it in"}),"\n",(0,r.jsx)(n.p,{children:"To get going with the BrainPad Arcade, let's try programming it to show a pizza sprite on the screen. Go ahead and plug the BrainPad Arcade into your computer and follow the steps below."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/arcade-usb-insert.gif",alt:"USB Insert"})}),"\n",(0,r.jsx)(n.h2,{id:"build-the-program",children:"Build the Program"}),"\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.a,{href:"https://arcade.makecode.com/",children:"https://arcade.makecode.com/"})," and click on start a new project (where the large plus sign is)."]}),"\n",(0,r.jsx)(n.p,{children:"Then, click on Sprites and then drag the Set sprite block to the green \u201con start\u201d block on the main screen. Change the sprite to whatever you like from the gallery or draw your own."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/arcade-add-blocks.gif",alt:"Add Blocks"})}),"\n",(0,r.jsx)(n.p,{children:"If the simulator is not \u201cplaying\u201d, click the play button and now you will see the sprite you added in the middle of the simulator's screen."}),"\n",(0,r.jsx)(n.h2,{id:"prep-the-device",children:"Prep the Device"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/arcade-virtual-drive.jpg",alt:"Virtual Drive"})}),"\n",(0,r.jsx)(n.p,{children:"After you connected the BrainPad Arcade earlier, your PC should have detected a new drive, called \u201cARCADE-F4\u201d. If it didn't, press reset on the board and then it will. Every time you press reset the board will cycle between the mode to load files, if connected to a PC."}),"\n",(0,r.jsx)(n.h1,{id:"download-the-games",children:"Download the Games"}),"\n",(0,r.jsx)(n.p,{children:"Click download and save the file on the \u201cARCADE-F4\u201d drive. The Green light will flash for a moment and the BrainPad will make the same sound you heard on the computer earlier. If you are using the Chrome browser, it is possible to sync the board so the file will download automatically to your board."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"lessons",children:"Lessons"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://arcade.makecode.com/",children:"MakeCode Arcade platform"})," already include several lessons and examples, but we also have our own!"]}),"\n",(0,r.jsx)(n.h3,{id:"2d-adventure",children:"2D Adventure"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/2d-adventure.gif",alt:"2D Adventure"})}),"\n",(0,r.jsx)(n.p,{children:"You only get 30 seconds to find the hamburger!"}),"\n",(0,r.jsx)(n.p,{children:"The lessons are PowerPoint presentations, and include animations."}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"2D Adventure",link:"/docs/resources/lessons/2d-adventure"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"space-shooter",children:"Space Shooter"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/space-shooter.gif",alt:"Space shooter"})}),"\n",(0,r.jsx)(n.p,{children:"Shoot them all!"}),"\n",(0,r.jsx)(n.p,{children:"The lessons include PowerPoint presentations, PDFs, and videos."}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Space Shooter",link:"/docs/resources/lessons/space-shooter"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"edge-pads",children:"Edge Pads"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/ec_13.jpg",alt:""})}),"\n",(0,r.jsx)(n.p,{children:"Let's play with colors using the Edge Pads and an RGB LED."}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Edge Connectors",link:"/docs/resources/lessons/edge-pads"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"analog-vs-digital",children:"Analog vs Digital"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/ana-vs-digi.jpg",alt:"Analog vs Digital"})}),"\n",(0,r.jsx)(n.p,{children:"Add more fun to colors using PINs"}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Analog vs Digital",link:"/docs/resources/lessons/analog-vs-digital"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"led-ring",children:"LED Ring"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/led-ring.png",alt:"LED Ring"})}),"\n",(0,r.jsx)(n.p,{children:"Upgrading your games with extra lights!"}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Led Ring",link:"/docs/resources/lessons/led-ring"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"motion-sensing",children:"Motion Sensing"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/motion-sense.gif",alt:"LED Ring"})}),"\n",(0,r.jsx)(n.p,{children:"Add physical movement sensing to your game!"}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Motion Sensor",link:"/docs/resources/lessons/motion-sense"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"light-sensing",children:"Light Sensing"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/light-sense.gif",alt:"LED Ring"})}),"\n",(0,r.jsx)(n.p,{children:"Measure light level."}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Light Sensor",link:"/docs/resources/lessons/light-sense"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"sounds-sensing",children:"Sounds Sensing"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"/img/res/arcade/sound-sense.gif",alt:"Sound Sensing"})}),"\n",(0,r.jsx)(n.p,{children:"Control your projects with sounds."}),"\n",(0,r.jsx)(s,{style:{margin:"10px"},label:"Sound Sensor",link:"/docs/resources/lessons/sound-sense"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9329:(e,n,s)=>{s(6540);s(4848)},4911:(e,n,s)=>{s(6540),s(9136);s(4848)},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);