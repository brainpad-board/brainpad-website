"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[8620],{673:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"language/cpp","title":"C++","description":"---","source":"@site/docs/language/cpp.mdx","sourceDirName":"language","slug":"/language/cpp","permalink":"/docs/language/cpp","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/language/cpp.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":".NET","permalink":"/docs/language/dotnet"},"next":{"title":"Swift","permalink":"/docs/language/swift"}}');var o=t(4848),r=t(8453);const i={},a="C++",l={},d=[{value:"Hosted",id:"hosted",level:3},{value:"Standalone",id:"standalone",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"c",children:"C++"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/cplusplus.png",alt:"C++ Logo"})}),"\n",(0,o.jsx)(n.p,{children:"There are two ways to use C++ with DUELink, hosted or Standalone."}),"\n",(0,o.jsx)(n.h3,{id:"hosted",children:"Hosted"}),"\n",(0,o.jsxs)(n.p,{children:["With a hosted option, a ",(0,o.jsx)(n.a,{href:"../system/pc-laptop",children:"PC & Laptop"})," or ",(0,o.jsx)(n.a,{href:"/docs/system/phone-tablet",children:"Phone & Tablets"})," can be used to run the C++ program to command DUELink modules through ",(0,o.jsx)(n.a,{href:"../interface/usb",children:"USB"})," or ",(0,o.jsx)(n.a,{href:"../interface/uart",children:"UART Serial"})," interfaces."]}),"\n",(0,o.jsx)(n.p,{children:"This is an example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"//code\r\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"standalone",children:"Standalone"}),"\n",(0,o.jsxs)(n.p,{children:["With this option, a DUELink module is executing a compiled C++ program developed by you. All modules utilize a STM32C071 microcontroller, which is supported by many IDEs, including free ",(0,o.jsx)(n.a,{href:"https://www.st.com/en/development-tools/stm32cubeide.html",children:"STM32CubeIDE"}),". We however use ARM Keil MDK. This is a paid professional IDE but ST has already licensed it to make it ",(0,o.jsx)(n.a,{href:"https://developer.arm.com/documentation/kan344/latest/?lang=en",children:"available for free for any STM32 Cortex-M0 micro"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["These options use low-end versatile libraries. They are powerful but not user friendly! ",(0,o.jsx)(n.a,{href:"../system/arduino",children:"Arduino"})," is a user-friendly alternative."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"// example\r\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Any DFU update tool can be used to load your compiled program onto a DUELink module. We recommend the ",(0,o.jsx)(n.a,{href:"https://www.st.com/en/development-tools/stm32cubeprog.html",children:"STM32CubeProgrammer"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:'99.9% of modules include SWD pins if you want to connect a debugger, such as ST-Link. SWCLK is found on the through hole "boot pads" or LDR button. SWDIO is found on a tiny SMT pad.'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);