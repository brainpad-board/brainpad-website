"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[1089],{2752:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>d,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"engine/stream","title":"Stream","description":"---","source":"@site/docs/engine/stream.mdx","sourceDirName":"engine","slug":"/engine/stream","permalink":"/docs/engine/stream","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/stream.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Daisylink","permalink":"/docs/engine/daisylink"},"next":{"title":"Coprocessor","permalink":"/docs/engine/coprocessor"}}');var n=a(4848),s=a(8453),i=a(5537),l=a(9329);const d={},o="Stream",c={},h=[{value:"Usage",id:"usage",level:2},{value:"Mechanism",id:"mechanism",level:2}];function u(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"stream",children:"Stream"})}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsxs)(r.p,{children:["DUELink ",(0,n.jsx)(r.a,{href:"scripting",children:"Scripting"})," language is built to be ASCII human-friendly. This works great; however, there are instances where speed or raw binary data is required. For example, when writing or reading a buffer. Through the stream feature, provided libraries such as ",(0,n.jsx)(r.a,{href:"../language/python",children:"Python"}),", allows the user to have direct access to the scripts internals."]}),"\n",(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.p,{children:"This is an example to send a byte array buffer to the device."}),"\n",(0,n.jsxs)(i.A,{groupid:"language",queryString:"show",values:[{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:".NET",value:"dotnet"},{label:"Arduino",value:"arduino"}],children:[(0,n.jsxs)(l.A,{value:"py",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../language/python",children:"Python"})," or ",(0,n.jsx)(r.a,{href:"../language/micropython",children:"MicroPython"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-py",children:'# add example here\r\nduelink.Stream.WriteBytes("b1", byte_array, 64) # write first 64 byte elements from byte_array to b1\r\nduelink.Stream.WriteFloats("a1", float_array, 64) # write first 64 float elements from float_array to a1\n'})})]}),(0,n.jsxs)(l.A,{value:"js",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../language/javascript",children:"JavaScript"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'// add example here\r\nduelink.Stream.WriteBytes("b1", byte_array, 64) // write first 64 byte elements from byte_array to b1\r\nduelink.Stream.WriteFloats("a1", float_array, 64) // write first 64 float elements from float_array to a1\n'})})]}),(0,n.jsxs)(l.A,{value:"dotnet",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../language/dotnet",children:".NET"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'// add example here\r\nduelink.Stream.WriteBytes("b1", byte_array, 64) // write first 64 byte elements from byte_array to b1\r\nduelink.Stream.WriteFloats("a1", float_array, 64) // write first 64 float elements from float_array to a1\n'})})]}),(0,n.jsxs)(l.A,{value:"arduino",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../system/arduino",children:"Arduino"})," or ",(0,n.jsx)(r.a,{href:"../language/cpp",children:"C++"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:'// add example here\r\nduelink.Stream.WriteBytes("b1", byte_array, 64) // write first 64 byte elements from byte_array to b1\r\nduelink.Stream.WriteFloats("a1", float_array, 64) // write first 64 float elements from float_array to a1\n'})})]})]}),"\n",(0,n.jsx)(r.p,{children:"Similarly, you can also read a buffer from the device. In this example, we are using a float arrays instead of a byte array."}),"\n",(0,n.jsxs)(i.A,{groupid:"language",queryString:"show",values:[{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:".NET",value:"dotnet"},{label:"Arduino",value:"arduino"}],children:[(0,n.jsxs)(l.A,{value:"py",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../language/python",children:"Python"})," or ",(0,n.jsx)(r.a,{href:"../language/micropython",children:"MicroPython"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-py",children:'# add example here\r\nduelink.Stream.ReadBytes("b1", byte_array, 64) # read 64 byte elements from b1 to byte_array\r\nduelink.Stream.ReadFloats("a1", float_array, 64) # read 64 byte elements from a1 to float_array\n'})})]}),(0,n.jsxs)(l.A,{value:"js",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../language/javascript",children:"JavaScript"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'// add example here\r\nduelink.Stream.ReadBytes("b1", byte_array, 64) // read 64 byte elements from b1 to byte_array\r\nduelink.Stream.ReadFloats("a1", float_array, 64) // read 64 byte elements from a1 to float_array\n'})})]}),(0,n.jsxs)(l.A,{value:"dotnet",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../language/dotnet",children:".NET"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:'// add example here\r\nduelink.Stream.ReadBytes("b1", byte_array, 64) // read 64 byte elements from b1 to byte_array\r\nduelink.Stream.ReadFloats("a1", float_array, 64) // read 64 byte elements from a1 to float_array\n'})})]}),(0,n.jsxs)(l.A,{value:"arduino",children:[(0,n.jsxs)(r.p,{children:["Start by setting up for ",(0,n.jsx)(r.a,{href:"../system/arduino",children:"Arduino"})," or ",(0,n.jsx)(r.a,{href:"../language/cpp",children:"C++"}),"."]}),(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-cpp",children:'// add example here\r\nduelink.Stream.ReadBytes("b1", byte_array, 64) // read 64 byte elements from b1 to byte_array\r\nduelink.Stream.ReadFloats("a1", float_array, 64) // read 64 byte elements from a1 to float_array\n'})})]})]}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsxs)(r.p,{children:["Stream can't be used directly by typing in ASCII commands, like when using the ",(0,n.jsx)(r.a,{href:"../console",children:"Console"}),"."]})}),"\n",(0,n.jsx)(r.h2,{id:"mechanism",children:"Mechanism"}),"\n",(0,n.jsx)(r.p,{children:"Understanding and utilizing Stream mechanism is only needed by advanced users. See the source code of one of the provided libraries for reference."}),"\n",(0,n.jsxs)(r.p,{children:["A Stream command initiates the request, such as ",(0,n.jsx)(r.code,{children:"DisplayStream()"}),". Once this command is received and accepted by the device, the ",(0,n.jsx)(r.code,{children:"&"})," symbol will be returned indicating readiness. The host can now send the entire data, exactly to the required byte count."]})]})}function y(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);