"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[7718],{8464:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"system/arduino","title":"Arduino","description":"---","source":"@site/docs/system/arduino.mdx","sourceDirName":"system","slug":"/system/arduino","permalink":"/docs/system/arduino","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/system/arduino.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"micro:bit","permalink":"/docs/system/microbit"},"next":{"title":"PC & Laptop","permalink":"/docs/system/pc-laptop"}}');var o=i(4848),d=i(8453);const s={},a="Arduino",t={},l=[{value:"Modules Using Arduino IDE",id:"modules-using-arduino-ide",level:2},{value:"Arduino Daisylink",id:"arduino-daisylink",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"arduino",children:"Arduino"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-logo.png",alt:"Arduino logo"})}),"\n",(0,o.jsxs)(n.p,{children:["This is an interesting option because it allows a DUELink to be used in 2 very different ways. You can program any of the modules using the Arduino IDE/software. Or, you can use an Arduino board to control a chain of ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylinked"})," DUELink modules. We will cover them individually."]}),"\n",(0,o.jsx)(n.h2,{id:"modules-using-arduino-ide",children:"Modules Using Arduino IDE"}),"\n",(0,o.jsx)(n.p,{children:"The chip used on DUELink modules is STM32C071, which is fully supported by the Arduino IDE through the ST extension."}),"\n",(0,o.jsxs)(n.p,{children:["While you can do this on any module, we recommend using ",(0,o.jsx)(n.a,{href:"../catalog/microcomputer/dueduino",children:"DueDuino"})," for a first-class experience with Arduino and DUELink."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/dueduino.png",alt:"DueDuino"})}),"\n",(0,o.jsxs)(n.p,{children:["Start the Arduino IDE, and install the ",(0,o.jsx)(n.code,{children:"STM32 MCU based boards"})," extension under Board Manager. More details are found ",(0,o.jsx)(n.a,{href:"https://github.com/stm32duino/Arduino_Core_STM32",children:"here"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-ide-stm.png",alt:"Select STM32C0"})}),"\n",(0,o.jsxs)(n.p,{children:["Under ",(0,o.jsx)(n.code,{children:"Tools/Board/STM32 MCU based boards"}),": Select ",(0,o.jsx)(n.code,{children:"Nucleo-64"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-ide-nucleo64.png",alt:"Select DFU file upload"})}),"\n",(0,o.jsxs)(n.p,{children:["Under ",(0,o.jsx)(n.code,{children:"Tools/Board part number"}),": Select ",(0,o.jsx)(n.code,{children:"Nucleo C071RB"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-ide-boardpart.png",alt:"Select DFU file upload"})}),"\n",(0,o.jsxs)(n.p,{children:["And finally under ",(0,o.jsx)(n.code,{children:"Tools/Upload method:"})," Select ",(0,o.jsx)(n.code,{children:"STM32CubeProgrammer(DFU)"})," for file upload."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-ide-upload.png",alt:"Select DFU file upload"})}),"\n",(0,o.jsx)(n.p,{children:"Add this code to blink the status LED, which is connected to pin PB8."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"void setup() {\r\n  // initialize digital pin as an output.\r\n  pinMode(PB8, OUTPUT);\r\n}\r\n\r\nvoid loop() {\r\n  digitalWrite(PB8, HIGH);  // turn the LED on (HIGH is the voltage level)\r\n  delay(1000);                      // wait for a second\r\n  digitalWrite(PB8, LOW);   // turn the LED off by making the voltage LOW\r\n  delay(1000);                      // wait for a second\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:'Put the board/chip in loader mode (DFU) by holding LDR or "A" buttons down while resetting the board.'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/ldr-a-buttons.png",alt:"Setting Boot mode mode"})}),"\n",(0,o.jsxs)(n.p,{children:["If no button is found, there are special 2-hole-pads with BOOT0/LDR and 3.3V found on the module. Use a paper clip (or a wire) to short the two pads.\r\n",(0,o.jsx)(n.img,{src:"/img/boot-mode.png",alt:"Setting Boot mode"})]}),"\n",(0,o.jsxs)(n.p,{children:["Reset the boards, and now it is in DFU mode. You can verify by checking the ",(0,o.jsx)(n.code,{children:"Device Manager"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/device-manager-dfu.png",alt:"Verify DFU mode"})}),"\n",(0,o.jsx)(n.p,{children:"You can now send the program from the Arduino IDE"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-ide-send.png",alt:"Send Program to Device"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["If you'd like to go back to using DUELink software you'll need to reload its firmware. Details are found on the ",(0,o.jsx)(n.a,{href:"../loader",children:"Loader"})," page."]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"arduino-daisylink",children:"Arduino Daisylink"}),"\n",(0,o.jsxs)(n.p,{children:["Any board running Arduino software can utilize DUELink modules. An example can be ",(0,o.jsx)(n.a,{href:"https://store-usa.arduino.cc/products/uno-r4-wifi",children:"Arduino Uno R4 WiFi"}),", which already include a JST connector."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-uno-r4-wifi.png",alt:"Setting DFU mode"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://www.sparkfun.com/sparkfun-redboard-qwiic.html",children:"Sparkfun Redboard Qwiic"})," is another option."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/sparkfun-redboard-qwiic.png",alt:"Sparkfun Redboard Qwiic"})}),"\n",(0,o.jsxs)(n.p,{children:["We recommend using our ",(0,o.jsx)(n.a,{href:"../catalog/microcomputer/dueduino",children:"DueDuino"})," for a hybrid first-class experience with Arduino and DUELink."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/dueduino.png",alt:"DueDuino"})}),"\n",(0,o.jsxs)(n.p,{children:["You are now ready to access a chain of ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylinked"})," modules that are connected to the JST connector."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Boards without a JST connector can use the ",(0,o.jsx)(n.a,{href:"../catalog/accessory/breakout",children:"Breakout"})," module to wire the connections."]})}),"\n",(0,o.jsxs)(n.p,{children:["Here is the ",(0,o.jsx)(n.a,{href:"https://store-usa.arduino.cc/products/uno-r4-wifi",children:"Arduino Uno R4 WiFi"}),' connected to a 2.3" color display with capacitive touch screen.']}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-duelink-display.png",alt:"Arduino Connected to DUELink display"})}),"\n",(0,o.jsxs)(n.p,{children:["You can do the same using ",(0,o.jsx)(n.a,{href:"https://www.sparkfun.com/sparkfun-redboard-qwiic.html",children:"Sparkfun Redboard Qwiic"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/redboard-duelink-display.png",alt:"Redboard Connected to DUELink display"})}),"\n",(0,o.jsx)(n.p,{children:"Here is an example to blink the STAT LED."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cpp",children:"#include <DUELink.h>\r\n#include <DUELinkLib.h>\r\nDUELink due;\r\nTwoWireTransport transport(Wire1);\r\n\r\nvoid setup() {\r\n  // get ready, over I2C\r\n  Wire1.begin();\r\n  due.begin(transport);\r\n\r\n  //blink LED\r\n  due.statled(200,200,50);\r\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);