"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[9775],{7525:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"engine/filesystem","title":"File System","description":"A complete FAT file system is a built in the DUELink firmware. It includes, FAT16, FAT32, Long-File-Name (LFN), directory handling, and several file-processing functions. It is limited to 2 GBytes size files! Thanks to Elm Chan for the awesome open-source FAT library.","source":"@site/docs/engine/filesystem.mdx","sourceDirName":"engine","slug":"/engine/filesystem","permalink":"/docs/engine/filesystem","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/filesystem.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Graphics","permalink":"/docs/engine/graphics"},"next":{"title":"Regions","permalink":"/docs/engine/regions"}}');var r=s(4848),t=s(8453);const d={},l="File System",c={},h=[{value:"Mount",id:"mount",level:2},{value:"File Operations",id:"file-operations",level:2},{value:"Directory Operations",id:"directory-operations",level:2},{value:"USB Memory Drives",id:"usb-memory-drives",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"file-system",children:"File System"})}),"\n",(0,r.jsxs)(n.p,{children:["A complete FAT file system is a built in the DUELink firmware. It includes, FAT16, FAT32, Long-File-Name (LFN), directory handling, and several file-processing functions. It is limited to 2 GBytes size files! Thanks to ",(0,r.jsx)(n.a,{href:"http://elm-chan.org/docs/fat_e.html",children:"Elm Chan"})," for the awesome open-source FAT library."]}),"\n",(0,r.jsx)(n.h2,{id:"mount",children:"Mount"}),"\n",(0,r.jsx)(n.p,{children:"Mount and initialize the file system. Only one media is supported at any given time."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Function"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsMnt(type, cs, baud, max_handle)"})}),(0,r.jsxs)(n.td,{children:["Enable file system to a specific ",(0,r.jsx)(n.code,{children:"type"})," of media on SPI bus with ",(0,r.jsx)(n.code,{children:"cs"})," chip-select pin at ",(0,r.jsx)(n.code,{children:"baud"})," KHz, with maximum allowed file handles ",(0,r.jsx)(n.code,{children:"max_handle"}),". Returns 0 if success."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsUnMnt()"})}),(0,r.jsx)(n.td,{children:"Release file system. Returns 0 if success."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsFmt(type, cs, baud)"})}),(0,r.jsx)(n.td,{children:"Format the mounted media. Note that this takes several minutes to complete."})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Supported media types:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"ID"}),(0,r.jsx)(n.th,{children:"Type"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Reserved"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"SD or Micro SD cards (includes SDHC)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"USB"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"file-operations",children:"File Operations"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Unless otherwise stated, all functions return 0 or positive for error code (error code 0: success), or negative on failure."})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Function"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'FsOpen("path", mode)'})}),(0,r.jsx)(n.td,{children:"Returns a file handle on success. 0 or negative on failure."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsClose(handle)"})}),(0,r.jsxs)(n.td,{children:["Close file and release ",(0,r.jsx)(n.code,{children:"handle"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsWrite(handle, [data])"})}),(0,r.jsxs)(n.td,{children:["Write from ",(0,r.jsx)(n.code,{children:"data"})," array. Returns how many bytes were write, negative error code otherwise."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsRead(handle, [data])"})}),(0,r.jsxs)(n.td,{children:["Read into ",(0,r.jsx)(n.code,{children:"data"})," array. Returns how many bytes were read, negative error code otherwise."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsSync(handle)"})}),(0,r.jsx)(n.td,{children:"Sync file with any buffered data."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsSeek(handle, offset)"})}),(0,r.jsxs)(n.td,{children:["change the location in the ",(0,r.jsx)(n.code,{children:"handle"})," file on where to read or write."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsTell(handle)"})}),(0,r.jsxs)(n.td,{children:["Returns the current location being access in ",(0,r.jsx)(n.code,{children:"handle"})," file."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'FsDel("path")'})}),(0,r.jsxs)(n.td,{children:["Delete file or directory at ",(0,r.jsx)(n.code,{children:"path"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'FsFind("path")'})}),(0,r.jsx)(n.td,{children:"Find if existing name is available. Returns the item type if found, return 0x10 for directory, 0x20 for file for example."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'fsfsz("path")'})}),(0,r.jsxs)(n.td,{children:["Returns ",(0,r.jsx)(n.code,{children:"path"})," file size, negative number on failure."]})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"File Open Modes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"ID"}),(0,r.jsx)(n.th,{children:"mode"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0x01"}),(0,r.jsx)(n.td,{children:"Read only"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0x02"}),(0,r.jsx)(n.td,{children:"Write only"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0x00"}),(0,r.jsx)(n.td,{children:"Open existing. Require existing file, or return -1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0x04"}),(0,r.jsx)(n.td,{children:"Create new. Require NOT existing file, or return -1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0x08"}),(0,r.jsx)(n.td,{children:"Create always. Force create new. If file is already exit, it will be deleted for new file"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0x30"}),(0,r.jsx)(n.td,{children:"Open append. If not exist, create one"})]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["Combine multiple modes, like use ",(0,r.jsx)(n.code,{children:'FsOpen("/test.txt", 0x02|0x0x30)'})," to open a file for write and append if existing."]})}),"\n",(0,r.jsx)(n.h2,{id:"directory-operations",children:"Directory Operations"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Function"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'FsMkDir("path")'})}),(0,r.jsxs)(n.td,{children:["Create a new directory at ",(0,r.jsx)(n.code,{children:"path"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'FsOpDir("path")'})}),(0,r.jsxs)(n.td,{children:["Open a directory at ",(0,r.jsx)(n.code,{children:"path"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FsFNext([name], [type])"})}),(0,r.jsxs)(n.td,{children:["Finds the next item and fills in ",(0,r.jsx)(n.code,{children:"name"})," with the next file or directory it found in an open directory using ",(0,r.jsx)(n.code,{children:"FsOpDir()"}),". ",(0,r.jsx)(n.code,{children:"type"})," is a single byte array containing the item type in standard FAT file system format, for example [0x10] for directly and [0x20] for files."]})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:'# file open types\r\n_r = 0x01 # Read only\r\n_w = 0x02 # Write only\r\n_x = 0x00 # Open existing. Require existing file, or return -1\r\n_n = 0x04 # Create new. Require NOT existing file, or return -1\r\n_c = 0x08 # Create always. Force create new. If file is already exit, it will be deleted for new file.\r\n_a = 0x30 # Open append. If not exist, create one.\r\n\r\nDim b1[] = "Hello World"\r\n\r\n# SD card, pin 17 chip select, 8Mhz clock, 4 file handles max\r\nfsmnt(1, 17, 8000, 4)\r\n\r\n# Write b1 array to a file\r\nh = FsOpen("/test.txt", _w|_c)\r\nFsWrite(h, b1)\r\nFSClose(h)\r\n\r\n\r\n# Read from the same file to b2 array\r\nh = FsOpen("/test.txt", _r)\r\nDim b2[11]\r\nFsRead(h, b2)\r\nPrintln(b2)\r\nFSClose(h)\r\n\r\nfsunmnt()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"usb-memory-drives",children:"USB Memory Drives"}),"\n",(0,r.jsx)(n.p,{children:"Accessing files on USB thumb drives is dome exactly same as SD. Type 2 media is USB memory. The second and third arguments are ignored in USB host mode."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"# USB thumbdrive, 4 file handles max\r\nfsmnt(2, 0, 0, 4)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["The use of USB Host requires a special co-processor, which is already included on modules such as ",(0,r.jsx)(n.a,{href:"../catalog/com/usb-host",children:"USB Host"}),"."]})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);