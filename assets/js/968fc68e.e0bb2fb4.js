"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[3766],{2795:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"engine/interrupt","title":"Interrupts","description":"---","source":"@site/docs/engine/interrupt.mdx","sourceDirName":"engine","slug":"/engine/interrupt","permalink":"/docs/engine/interrupt","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/interrupt.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Scheduler","permalink":"/docs/engine/scheduler"},"next":{"title":"Standalone","permalink":"/docs/engine/standalone"}}');var i=r(4848),s=r(8453);const a={},l="Interrupts",d={},c=[];function o(e){const n={code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"interrupts",children:"Interrupts"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["DUELink Engine can invoke a function when a pin changes, on interrupts. ",(0,i.jsx)(n.code,{children:"IStart(func, pin, trigger, pull)"})," where trigger is: 0- Falling edge, 1- Rising edge, and 2- Falling & Rising edges. Pull is: 0- none, 1- up, 2- down."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'_i = 450\r\n_b = 0\r\nIStart("Blink", 1, 0, 1)\r\n\r\nwhile 1\r\n  PrintLn("Stat: ", Istatled("Blink"))\r\n  Wait(100)\r\nwend\r\n\r\nfn Blink()\r\n  DWrite(0, _b&1)# Status LED is always on pin 0\r\n  _b=_b+1\r\n  println("Blink: ", _b)\r\n  if _b=100# stop the interrupt after 100\r\n    IAbort("Blink")\r\n  end\r\nfend\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);