"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[9328],{8455:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"language/microblocks","title":"MicroBlocks","description":"---","source":"@site/docs/language/microblocks.mdx","sourceDirName":"language","slug":"/language/microblocks","permalink":"/docs/language/microblocks","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/language/microblocks.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"MakeCode","permalink":"/docs/language/makecode"},"next":{"title":"App Inventor","permalink":"/docs/language/app-inventor"}}');var s=o(4848),r=o(8453);const c={},t="MicroBlocks",l={},a=[{value:"MicroBlocks Host",id:"microblocks-host",level:2},{value:"MicroBlocks on DUELink Modules",id:"microblocks-on-duelink-modules",level:2}];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"microblocks",children:"MicroBlocks"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks.png",alt:"MicroBlocks"})}),"\n",(0,s.jsx)(i.p,{children:"For users who enjoy block-coding, MicroBlocks supports several boards. All you need is a board with a JST connector to utilize hundreds of DUELink modules."}),"\n",(0,s.jsxs)(i.p,{children:["There are 2 ways to benefit from MicroBlocks, by using a ",(0,s.jsxs)(i.a,{href:"../system/microbit",children:["micro",":bit"]})," or by loading MicroBlocks directly on a DUELink module!"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"microblocks-host",children:"MicroBlocks Host"}),"\n",(0,s.jsxs)(i.p,{children:["In theory, you can use any board (any host) that is supported by MicroBlocks. But we will focus on using ",(0,s.jsxs)(i.a,{href:"../system/microbit",children:["micro",":bit"]}),". To connect DUELink modules, you need an accessory that adds a JST connector to micro",":bit",". For example, ",(0,s.jsxs)(i.a,{href:"https://www.sparkfun.com/sparkfun-qwiic-micro-bit-breakout.html",children:["Sparkfun Qwiic micro",":bit"," Breakout"]})," is a good option."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microbit-breakout.png",alt:"micro"})}),"\n",(0,s.jsxs)(i.p,{children:["This board connects the JST connector to ",(0,s.jsx)(i.a,{href:"../interface/i2c",children:"I2C"})," bus, which is one of supported ",(0,s.jsx)(i.a,{href:"../interface/intro",children:"Interfaces"}),". This JST connector now becomes a ",(0,s.jsx)(i.a,{href:"../interface/downlink",children:"Downlink"})," connection for building a ",(0,s.jsx)(i.a,{href:"../engine/daisylink",children:"Daisylink"})," of connected DUELink modules ."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microbit-sparkfun-duelink.png",alt:"micro"})}),"\n",(0,s.jsxs)(i.p,{children:["Lets get started! Create a MicroBlocks project on ",(0,s.jsx)(i.a,{href:"https://microblocks.fun/run/",children:"microblocks.fun/run/"}),", or download the local version for ",(0,s.jsx)(i.a,{href:"https://microblocks.fun/download",children:"MicroBlocks' Downloads"})," page."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-ide.png",alt:"MicroBlocks IDE"})}),"\n",(0,s.jsxs)(i.p,{children:["Connect a micro",":bit"," and add blocks that send ",(0,s.jsx)(i.code,{children:"statled(200,200,5)"})," over the I2C Interface ",(0,s.jsx)(i.code,{children:"when button A pressed"}),"."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-block-led.png",alt:"MicroBlocks Code Block LED"})}),"\n",(0,s.jsxs)(i.p,{children:["Define the ",(0,s.jsx)(i.code,{children:"SendCommand"})," function that will take the string we sent above and put it inside a byte array for I2C to use."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-block-function.png",alt:"MicroBlocks Code Block Function"})}),"\n",(0,s.jsxs)(i.p,{children:["This will blink the status LED on a connected DUELink module ",(0,s.jsx)(i.code,{children:"on"})," for 200ms and ",(0,s.jsx)(i.code,{children:"off"})," for 200ms, 5 times"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/status-led.gif",alt:"Blink Status LED"})}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsx)(i.p,{children:"A DUELink extension will be provided in the future to make the use of MicroBlocks easier."})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"microblocks-on-duelink-modules",children:"MicroBlocks on DUELink Modules"}),"\n",(0,s.jsx)(i.p,{children:"MicroBlocks Engine can run on any of the DUELink modules, giving that module a native block-coding option."}),"\n",(0,s.jsxs)(i.p,{children:["While MicroBlocks can be loaded on the entire ",(0,s.jsx)(i.a,{href:"/docs/catalog/intro",children:"Catalog"})," of devices, it shines best on one of the ",(0,s.jsx)(i.a,{href:"../catalog/microcomputers",children:"Microcomputers"}),", such as ",(0,s.jsx)(i.a,{href:"../catalog/microcomputer/cincobit",children:"CincoBit"})," and ",(0,s.jsx)(i.a,{href:"../catalog/microcomputer/pixobit",children:"PixoBit"}),"."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/cincobit-pixobit.png",alt:"CincoBit & PixoBit"})}),"\n",(0,s.jsxs)(i.p,{children:["From here, a user can easily ",(0,s.jsx)(i.a,{href:"../engine/daisylink",children:"Daisylink"})," several modules. In this example, the MicroBlocks special firmware is loaded on ",(0,s.jsx)(i.a,{href:"../catalog/microcomputer/pixobit",children:"PicoBit"}),". The MicroBlocks website/app can now be used to program a PixoBit, which is then commanding the other modules in the link."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/pixobit-daisylinked.png",alt:"PixoBit Daisylinked"})}),"\n",(0,s.jsxs)(i.p,{children:["To use the MicroBlocks Engine, replace the default DUELink firmware with the MicroBlocks firmware. Detailed instructions on firmware updates are found on the ",(0,s.jsx)(i.a,{href:"../loader",children:"Loader"})," page. But in short, put the board in loader mode by pressing A or LDR button, or by placing the jumper, and then reset the board while doing so. If there is no reset button on your board then simply power cycle the board."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/ldr-a-pads.png",alt:"LDR, A, pads"})}),"\n",(0,s.jsxs)(i.p,{children:["Visit ",(0,s.jsx)(i.a,{href:"https://console.duelink.com/",children:"https://console.duelink.com/"})," and click ",(0,s.jsx)(i.code,{children:"Firmware"})," on the top menu."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/due-firmware.png",alt:"DUELink Console Firmware Menu"})}),"\n",(0,s.jsxs)(i.p,{children:["You can now connect to ",(0,s.jsx)(i.code,{children:"DFU in FS Mode"})," device then select the ",(0,s.jsx)(i.code,{children:"MicroBlocks"})," from the available options. If you do not see ",(0,s.jsx)(i.code,{children:"DFU in FS Mode"})," then the board is not in loader mode. Go to the ",(0,s.jsx)(i.a,{href:"../loader",children:"loader"})," page and make sure the board is in the loader mode."]}),"\n",(0,s.jsxs)(i.p,{children:["Once the firmware is loaded, power cycle the board. You can now use the online interface at ",(0,s.jsx)(i.a,{href:"https://microblocks.fun/run/",children:"https://microblocks.fun/run/"})," or download the MicroBlocks software locally from their ",(0,s.jsx)(i.a,{href:"https://microblocks.fun/download",children:"download"})," page."]}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:["The firmware will dynamically map the pins to match DUELink standard pin mapping on all modules but it will map the pins to the edge connector on devices with micro",":bit-compatible"," edge connector."]})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-download.png",alt:"Download"})}),"\n",(0,s.jsx)(i.p,{children:"Install the MicroBlocks software."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-install.png",alt:"Install"})}),"\n",(0,s.jsx)(i.p,{children:"Plug in the DUELink hardware, the IDE will automatically connect to the device."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-connect.png",alt:"Connect"})}),"\n",(0,s.jsxs)(i.p,{children:["Now we're ready for some block-coding!. Click on the ",(0,s.jsx)(i.code,{children:"Add Library"})," button and Open the ",(0,s.jsx)(i.code,{children:"LED Display"}),". This will add the 5x5 LED Matrix block."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-library.png",alt:"Connect"})}),"\n",(0,s.jsx)(i.p,{children:"Click on the block itself it will activate the LEDs on CincoBit. Any changes we make are instantly transferred to the device."}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-instant.gif",alt:"Smile and Frown"})}),"\n",(0,s.jsx)(i.p,{children:'This program will switch from a "smile" to a "frown" based the pressed button.'}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"/img/microblocks-smile-frown.gif",alt:"Smile and Frown"})}),"\n",(0,s.jsx)(i.admonition,{type:"tip",children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.a,{href:"../engine/daisylink",children:"Daisylinked"})," modules do not need to be updated with the MicroBlocks firmware. Only ",(0,s.jsx)(i.code,{children:"PioxBit"})," (first module) is loaded with MicroBlocks firmware in this example.\r\n",(0,s.jsx)(i.img,{src:"/img/pixobit-daisylinked.png",alt:"PixoBit Daisylinked"})]})})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);